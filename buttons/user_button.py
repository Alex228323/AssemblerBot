from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from database import UserDataBase
from utils import CallBackData

user_db = UserDataBase()


class UserMarkups:
    def __init__(self):
        pass

    def help_button():
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url="https://t.me/I_am_a_sssnake"))
        return markup
    
    @staticmethod
    def main_menu(user_id):
        res = user_db.get_user_assembling(user_id=user_id)#–ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–±–æ—Ä–∫–∏
        ready = user_db.get_user_ready_assembling(user_id=user_id)#–ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≥–æ—Ç–æ–≤—ã–µ —Å–±–æ—Ä–∫–∏
        markup = InlineKeyboardMarkup()
        if len(res) == 1:#–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞, —Ç–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–æ–±—Ä–∞—Ç—å –Ω–æ–≤—É—é –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            markup.add(InlineKeyboardButton('‚úèÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–±–æ—Ä–∫—É ‚úèÔ∏è', callback_data='resume_assemblies'))
            markup.add(InlineKeyboardButton('‚öí –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–±–æ—Ä–∫—É ‚öí', callback_data='create_assemblies'))
        else:#–∏–Ω–∞—á–µ –≤—ã–≤–µ—Å—Ç–∏ –∫–Ω–æ–ø–∫—É —á–æ–∑–¥–∞—Ç—å —Å–±–æ—Ä–∫—É
            markup.add(InlineKeyboardButton('‚öí –°–æ–∑–¥–∞—Ç—å —Å–±–æ—Ä–∫—É ‚öí', callback_data='create_assemblies'))
        if len(ready) >= 1:#–ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Ç–æ–≤—ã—Ö —Å–±–æ—Ä–æ–∫ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 1 —Ç–æ –≤—ã–≤–µ—Å—Ç–∏ –∫–Ω–æ–ø–∫—É –º–æ–∏ —Å–±–æ—Ä–∫–∏
            markup.add(InlineKeyboardButton('üìÅ –ú–æ–∏ —Å–±–æ—Ä–∫–∏ üìÅ', callback_data='my_assemblies'))
        markup.add(InlineKeyboardButton('üñ• –ì–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è üñ•', callback_data='ready_assemblies'))
        return markup
        
    # –ú–µ–Ω—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–µ–≥–æ.
    @staticmethod
    def add_assembling(name, build_id):
        markups = InlineKeyboardMarkup(row_width=2)
        but1 = (InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=name))
        but2 = (InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", callback_data=CallBackData.accessories_accept.new(type="accept", name=name, id=build_id)))
        markups.add(but1,but2)
        return markups
    # –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –≥–æ—Ç–æ–≤–æ–π —Å–±–æ—Ä–∫–∏.
    @staticmethod
    def type_assembly(name_pc: classmethod):
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton('üéÆ –ò–≥—Ä–æ–≤–æ–π üéÆ', callback_data=name_pc.new(type="info_type", name="gaming")))
        markup.add(InlineKeyboardButton('üìé –û—Ñ–∏—Å–Ω—ã–π üìé', callback_data=name_pc.new(type="info_type", name="office")))
        markup.add(InlineKeyboardButton('üñ• –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π üñ•', callback_data=name_pc.new(type="info_type", name="professional")))
        markup.add(InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data="assembling"))
        return markup

    @staticmethod
    def accessories_pc(stage):
        markup = InlineKeyboardMarkup()
        if stage == 1:
            markup.add(InlineKeyboardButton('–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä', callback_data="processor"))
        elif stage == 2:
            markup.add(InlineKeyboardButton('–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞', callback_data="motherboard"))
        elif stage == 3:
            markup.add(InlineKeyboardButton('–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞', callback_data="video_card"))
        elif stage >= 4:
            markup.add(InlineKeyboardButton('–ö–æ—Ä–ø—É—Å', callback_data="body"), InlineKeyboardButton('–ö—É–ª–µ—Ä', callback_data="cooler"))
            markup.add(InlineKeyboardButton('–î–∏—Å–∫', callback_data="drive"), InlineKeyboardButton('–ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è', callback_data="psu"))
            markup.add(InlineKeyboardButton('–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å', callback_data="ram"),)
            markup.add(InlineKeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–±–æ—Ä–∫—É', callback_data="save_assembling"))
        markup.add(InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data="assembling"))
        return markup

    @staticmethod
    def info_pc(view_build: classmethod, build_id: int, data: list, button_type: str, callbackdata: str):
        a = ["–ö–æ—Ä–ø—É—Å", "–ö—É–ª–µ—Ä", "–î–∏—Å–∫", "–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞", "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä", "–ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è", "–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å", "–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞"]#—Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
        b = ["body", "cooler", "drive", "motherboard", "processor", "psu", "ram", "video_card"]#—Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏.
        markup = InlineKeyboardMarkup()
        markup_add = []
        for i in range(0, len(data)):#–¶–∏–∫–ª for –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏—Ç–µ—Ä–∞—Ü–∏—é –ø–æ —Å–ø–∏—Å–∫—É –¥–∞–Ω–Ω—ã—Ö, 
            #–∏ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –±–æ–ª—å—à–µ 1, –æ–Ω –¥–æ–±–∞–≤–ª—è–µ—Ç InlineKeyboardButton –≤ 
            #—Å–ø–∏—Å–æ–∫ markup_add —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Ç–µ–∫—Å—Ç–æ–º –∏ –¥–∞–Ω–Ω—ã–º–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ 
            #–∏–∑ a –∏ b —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
            if int(data[i]) > 1:
                markup_add.append(InlineKeyboardButton(text=a[i], callback_data=view_build.new(type=button_type, name=b[i], id=data[i], build_id=build_id)))
            if len(markup_add) == 2:#–ï—Å–ª–∏ –≤ markup_add –µ—Å—Ç—å –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞, –æ–Ω –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –∫ –æ–±—ä–µ–∫—Ç—É —Ä–∞–∑–º–µ—Ç–∫–∏ –∏ –æ—á–∏—â–∞–µ—Ç markup_add.
                markup.add(*markup_add)
                markup_add = []
        if markup_add:#–µ—Å–ª–∏ –≤ markup_add –æ—Å—Ç–∞–ª–∏—Å—å –∫–∞–∫–∏–µ-–ª–∏–±–æ —ç–ª–µ–º–µ–Ω—Ç—ã, –æ–Ω–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∫ –æ–±—ä–µ–∫—Ç—É —Ä–∞–∑–º–µ—Ç–∫–∏
            markup.add(*markup_add)
        markup.add(InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=callbackdata))
        return markup#–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Ä–∞–∑–º–µ—Ç–∫–∏.
