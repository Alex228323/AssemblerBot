from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.utils.callback_data import CallbackData
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from loader import dp
from database import UserDataBase
from buttons import UserMarkups
from aiogram.dispatcher.filters.state import State, StatesGroup
from utils import pc_text, CallBackData, update_accessories, get_description_accessories, get_accessories


class name_acc(StatesGroup):
    name = State()


user_db = UserDataBase()


@dp.message_handler(commands=["start"])
async def cmd_start(message: types.Message):
    if( not user_db.check_user(message.from_user.id)):
        user_db.create_user(message.from_user.id, message.from_user.first_name, message.from_user.username)
        await message.answer("–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç\n\n"
                             "/assembling ‚Äì —Å–±–æ—Ä–∫–∞ –≤–∞—à–µ–≥–æ –ü–ö –∏–ª–∏ –≤—ã–±–æ—Ä –∏–∑ —É–∂–µ –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π\n\n"
                             "/help ‚Äì –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –µ—Å–ª–∏ —É–≤–∏–¥–µ–ª–∏ –æ—à–∏–±–∫–∏ –∏–ª–∏ –±–∞–≥–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ—Ç–∞",)
    else:
        await message.answer("–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç\n\n"
                     "/assembling ‚Äì —Å–±–æ—Ä–∫–∞ –≤–∞—à–µ–≥–æ –ü–ö –∏–ª–∏ –≤—ã–±–æ—Ä –∏–∑ —É–∂–µ –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π\n\n"
                     "/help ‚Äì –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –µ—Å–ª–∏ —É–≤–∏–¥–µ–ª–∏ –æ—à–∏–±–∫–∏ –∏–ª–∏ –±–∞–≥–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ—Ç–∞",)

@dp.message_handler(commands=["help"])
async def help(message: types.Message):
    await message.answer(text='–ú—ã –æ—Ç–≤–µ—Ç–∏–º –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è', reply_markup=UserMarkups.help_button())
    
# –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –≥–æ—Ç–æ–≤—ã—Ö
@dp.message_handler(commands=["assembling"])
async def assemblies(message: types.Message):
    user_id = message.from_user.id
    await message.answer(text='–°–æ–∑–¥–∞–π—Ç–µ —Å–±–æ—Ä–∫—É –∏–ª–∏ –≤—ã–±–µ—Ä–µ—Ç–µ –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö!', reply_markup=UserMarkups.main_menu(user_id))


# –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –≥–æ—Ç–æ–≤—ã—Ö
@dp.callback_query_handler(text="assembling")
async def assemblies(call: types.CallbackQuery):
    user_id = call.from_user.id
    await call.message.edit_text(text='–°–æ–∑–¥–∞–π—Ç–µ —Å–±–æ—Ä–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ä–∞–¥–æ–≤–∞—Ç—å –í–∞—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!', reply_markup=UserMarkups.main_menu(user_id))
   
# –û—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message_handler(content_types=types.ContentType.ANY)
async def echo(message: types.Message):
    await message.answer("–•–º–º, —è –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å –í–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ü§î")


